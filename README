String::Approx README

This Perl module implements approximate matching aka fuzzy matching.

NOTE!  This module has version 2 calling interface that is
incompatible with the version 1.  In plain English: certain things
that used to work with the old version do not work any more quite that
way they used to.  Okay, you want to know anyway what has changed:
the way modifiers ('i', '20%', 'I2') are specified in the call has
changed.  Read on to find out why this change was made.

I am very sorry about this incompatibility but there are bonuses.

	- String::Approx is now (release 2.3) about 40 times faster
	  than release 1.6 was.  From release 2.2 we had a speed
	  jump by factor or two thanks to Håkan Kjellerstrand
	  and Lars Gregersen.

	- there is now a much more natural syntax:

	@matched     = amatch     ("pattern", @match_from_these);
	@substituted = asubstitute("pattern", @substitute_in_these);

	  that is, you can now match/substitute from/in somewhere
	  else than just $_.  If you leave out the target @list
	  of amatch/asubstitute the matching is still done at $_.
	- the modifiers?  Well, this is how you match case-insensitively:

		amatch("pattern", ['i'])

	  A little more writing than before, the square brackets.
	  Read the pod documentation in Approx.pm for more details.

There is a String::Approx version 1 calling interface compability mode
to enable the old calling interface.  If you use it you cannot use the
above match-from-an-array-instead-of-the-$_-interface.  The compability
mode is enabled by the "compat1" tag, for exampe:

		use String::Approx qw(amatch compat1);

To build the kit:

	perl Makefile.PL
	make
	make test

To install the kit:

	make install

-- 
Jarkko Hietaniemi <jhi@iki.fi>
